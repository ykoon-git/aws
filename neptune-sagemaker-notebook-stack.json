{
  "Description": "A template to deploy Neptune Notebooks using CloudFormation resources",
  "Parameters": {
    "Env": {
      "Description": "Environment tag, e.g. prod, nonprod.",
      "Default": "test",
      "Type": "String",
      "AllowedPattern": "[a-z0-9]+",
      "MaxLength": 15
    },
    "NotebookInstanceType": {
      "Description": "SageMaker Notebook instance type. Please refer https://aws.amazon.com/sagemaker/pricing/ for uptodate allowed instance type in aws region and https://aws.amazon.com/neptune/pricing/ for pricing.",
      "Type": "String",
      "Default": "ml.t3.medium",
      "AllowedValues": [
        "ml.t2.medium",
        "ml.t2.large",
        "ml.t2.xlarge",
        "ml.t2.2xlarge",
        "ml.t3.medium",
        "ml.t3.large",
        "ml.t3.xlarge",
        "ml.t3.2xlarge",
        "ml.m4.xlarge",
        "ml.m4.2xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.m4.16xlarge",
        "ml.m5.xlarge",
        "ml.m5.2xlarge",
        "ml.m5.4xlarge",
        "ml.m5.12xlarge",
        "ml.m5.24xlarge",
        "ml.c4.large",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.4xlarge",
        "ml.c4.8xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge",
        "ml.c5d.xlarge",
        "ml.c5d.2xlarge",
        "ml.c5d.4xlarge",
        "ml.c5d.9xlarge",
        "ml.c5d.18xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.p2.2xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge"
      ],
      "ConstraintDescription": "Must be a valid SageMaker instance type."
    },
    "DBClusterId": {
      "Description": "Cluster id of an existing Neptune cluster.",
      "Type": "String"
    },
    "NeptuneClusterEndpoint": {
      "Description": "Cluster endpoint of an existing Neptune cluster.",
      "Type": "String"
    },
    "NeptuneClusterPort": {
      "Description": "OPTIONAL: Port of an existing Neptune cluster (default 8182).",
      "Type": "String",
      "Default": "8182"
    },
    "NeptuneClusterVpc": {
      "Description": "VPC Id of the VPC in which your Neptune cluster is running.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "NeptuneClusterSubnetId": {
      "Description": "Id of one of the subnets in which your Neptune cluster is running.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "NeptuneClientSecurityGroup": {
      "Description": "OPTIONAL: A VPC security group with access to your Neptune cluster. Leave empty only if the Neptune cluster allows access from anywhere.",
      "Type": "String"
    },
    "NeptuneLoadFromS3RoleArn": {
      "Description": "ARN of the IAM Role that allows Amazon Neptune to access Amazon S3 resources.",
      "Type": "String"
    },
    "NeptuneMLIAMRoleArn": {
      "Description": "OPTIONAL: ARN of the IAM Role that allows Amazon Neptune to access ML resources.",
      "Type": "String",
      "Default": ""
    },
    "NeptuneExportApiUri": {
      "Description": "OPTIONAL: Neptune-Export API URI",
      "Type": "String",
      "Default": ""
    },
    "NeptuneClusterResourceId": {
      "Description": "Neptune cluster resource ID.",
      "Type": "String"
    },
    "StartupScript": {
      "Description": "OPTIONAL: Startup script additions for the notebook instance.",
      "Type": "String",
      "Default": ""
    },
    "CustomPolicyArn": {
      "Description": "OPTIONAL: Custom managed policy ARN.",
      "Type": "String",
      "Default": ""
    },
    "EnableIamAuthOnNeptune": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enable IAM Auth for Neptune."
    }
  },
  "Conditions": {
    "AddNeptuneClientSecurityGroup": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "NeptuneClientSecurityGroup"
            },
            ""
          ]
        }
      ]
    },
    "AddCustomPolicy": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "CustomPolicyArn"
            },
            ""
          ]
        }
      ]
    },
    "EnableIAMAuth": {
      "Fn::Equals": [
        {
          "Ref": "EnableIamAuthOnNeptune"
        },
        "true"
      ]
    },
    "ValidNeptuneMLIAMRoleArn": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "NeptuneMLIAMRoleArn"
            },
            ""
          ]
        }
      ]
    }
  },
  "Mappings": {
    "NotebookBucket": {
      "aws": {
        "Name": "aws-neptune-notebook"
      },
      "aws-cn": {
        "Name": "aws-neptune-customer-samples-cn-northwest-1"
      },
      "aws-us-gov": {
        "Name": "aws-neptune-notebook"
      }
    }
  },
  "Resources": {
    "SageMakerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow Access",
        "VpcId": {
          "Ref": "NeptuneClusterVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Neptune"
            }
          },
          {
            "Key": "StackId",
            "Value": {
              "Fn::Sub": "${AWS::StackId}"
            }
          },
          {
            "Key": "Stack",
            "Value": {
              "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
            }
          },
          {
            "Key": "Application",
            "Value": "NeptuneCloudformation"
          }
        ]
      }
    },
    "NeptuneNotebookInstance": {
      "Type": "AWS::SageMaker::NotebookInstance",
      "Properties": {
        "InstanceType": {
          "Ref": "NotebookInstanceType"
        },
        "NotebookInstanceName": {
          "Fn::Join": [
            "",
            [
              "aws-neptune-",
              {
                "Fn::Select": [
                  "0",
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Ref": "AWS::StackName"
                      }
                    ]
                  }
                ]
              },
              "-",
              {
                "Ref": "Env"
              }
            ]
          ]
        },
        "SubnetId": {
          "Ref": "NeptuneClusterSubnetId"
        },
        "SecurityGroupIds": {
          "Fn::If": [
            "AddNeptuneClientSecurityGroup",
            [
              {
                "Ref": "NeptuneClientSecurityGroup"
              }
            ],
            [
              {
                "Fn::GetAtt": [
                  "SageMakerSecurityGroup",
                  "GroupId"
                ]
              }
            ]
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "ExecutionRole",
            "Arn"
          ]
        },
        "LifecycleConfigName": {
          "Fn::GetAtt": [
            "NeptuneNotebookInstanceLifecycleConfig",
            "NotebookInstanceLifecycleConfigName"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Neptune-${Env}"
            }
          },
          {
            "Key": "StackId",
            "Value": {
              "Fn::Sub": "${AWS::StackId}"
            }
          },
          {
            "Key": "Stack",
            "Value": {
              "Fn::Sub": "${AWS::Region}-${AWS::StackName}"
            }
          },
          {
            "Key": "Application",
            "Value": "NeptuneCloudformation"
          },
          {
            "Key": "aws-neptune-cluster-id",
            "Value": {
              "Ref": "DBClusterId"
            }
          },
          {
            "Key": "aws-neptune-resource-id",
            "Value": {
              "Ref": "NeptuneClusterResourceId"
            }
          }
        ]
      }
    },
    "NeptuneNotebookInstanceLifecycleConfig": {
      "Type": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
      "Properties": {
        "OnStart": [
          {
            "Content": {
              "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "sudo -u ec2-user -i <<'EOF'\n\n",
                    {
                      "Fn::If": [
                        "EnableIAMAuth",
                        "echo \"export GRAPH_NOTEBOOK_AUTH_MODE=IAM\" >> ~/.bashrc\n",
                        "echo \"export GRAPH_NOTEBOOK_AUTH_MODE=DEFAULT\" >> ~/.bashrc\n"
                      ]
                    },
                    "echo \"export GRAPH_NOTEBOOK_IAM_PROVIDER=ROLE\" >> ~/.bashrc\n",
                    "echo \"export GRAPH_NOTEBOOK_SSL=True\" >> ~/.bashrc\n",
                    "echo \"export GRAPH_NOTEBOOK_HOST=",
                    {
                      "Ref": "NeptuneClusterEndpoint"
                    },
                    "\" >> ~/.bashrc\n",
                    "echo \"export GRAPH_NOTEBOOK_PORT=",
                    {
                      "Ref": "NeptuneClusterPort"
                    },
                    "\" >> ~/.bashrc\n",
                    "echo \"export NEPTUNE_LOAD_FROM_S3_ROLE_ARN=",
                    {
                      "Ref": "NeptuneLoadFromS3RoleArn"
                    },
                    "\" >> ~/.bashrc\n",
                    "echo \"export AWS_REGION=",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\" >> ~/.bashrc\n\n",
                    "echo \"export NEPTUNE_ML_ROLE_ARN=",
                    {
                      "Ref": "NeptuneMLIAMRoleArn"
                    },
                    "\" >> ~/.bashrc\n\n",
                    "echo \"export NEPTUNE_EXPORT_API_URI=",
                    {
                      "Ref": "NeptuneExportApiUri"
                    },
                    "\" >> ~/.bashrc\n\n",
                    "aws s3 cp s3://",
                    {
                      "Fn::FindInMap" :
                      [ "NotebookBucket", { "Ref" : "AWS::Partition" }, "Name" ]
                    },
                    "/graph_notebook.tar.gz /tmp/graph_notebook.tar.gz\n",
                    "rm -rf /tmp/graph_notebook\n",
                    "tar -zxvf /tmp/graph_notebook.tar.gz -C /tmp\n",
                    "/tmp/graph_notebook/install.sh\n\n",
                    {
                      "Ref": "StartupScript"
                    },
                    "\n\n",
                    "EOF"
                  ]
                ]
              }
            }
          }
        ]
      }
    },
    "ExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "sagemaker.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": {
          "Fn::If": [
            "AddCustomPolicy",
            [
              {
                "Ref": "CustomPolicyArn"
              }
            ],
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "SagemakerNotebookNeptunePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:PutMetricData"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": "neptune-db:connect",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:neptune-db:${AWS::Region}:${AWS::AccountId}:${NeptuneClusterResourceId}/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:Put*",
                    "s3:Get*",
                    "s3:List*"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:s3:::*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": "execute-api:Invoke",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sagemaker:CreateModel",
                    "sagemaker:CreateEndpointConfig",
                    "sagemaker:CreateEndpoint",
                    "sagemaker:DescribeModel",
                    "sagemaker:DescribeEndpointConfig",
                    "sagemaker:DescribeEndpoint",
                    "sagemaker:DeleteModel",
                    "sagemaker:DeleteEndpointConfig",
                    "sagemaker:DeleteEndpoint"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:*/*"
                  }
                },
                {
                  "Fn::If": [
                    "ValidNeptuneMLIAMRoleArn",
                    {
                      "Action": [
                          "iam:PassRole"
                      ],
                      "Resource":  {
                        "Ref": "NeptuneMLIAMRoleArn"
                      },
                      "Effect": "Allow"
                    },
                    {"Ref" : "AWS::NoValue"}
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "NeptuneNotebookInstanceId": {
      "Value": {
        "Ref": "NeptuneNotebookInstance"
      }
    },
    "NeptuneSagemakerNotebook": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::Select": [
                1,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Ref": "NeptuneNotebookInstance"
                    }
                  ]
                }
              ]
            },
            ".notebook.",
            {
              "Ref": "AWS::Region"
            },
            ".sagemaker.aws/"
          ]
        ]
      }
    },
    "NeptuneNotebookInstanceLifecycleConfigId": {
      "Value": {
        "Ref": "NeptuneNotebookInstanceLifecycleConfig"
      }
    }
  }
}
